{
    "name": "ðŸ§± mason-dj",
    "dockerComposeFile": "docker-compose.yml",
    "service": "srv_django",
    "workspaceFolder": "/workspace",
    "containerEnv": {
        "PYTHONUNBUFFERED": "1",
        "PYTHONBREAKPOINT": "ipdb.set_trace"
    },
    "forwardPorts": [
        8000, // django server
        5432, // postgres
        6379 // redis
    ],
    "portsAttributes": {
        "8000": {
            "label": "Django",
            "onAutoForward": "notify"
        },
        "5432": {
            "label": "PostgreSQL",
            "onAutoForward": "silent"
        },
        "6379": {
            "label": "Redis",
            "onAutoForward": "silent"
        }
    },
    "onCreateCommand": "poetry config virtualenvs.create false && poetry install",
    "postCreateCommand": "git config core.hooksPath .githooks",
    "features": {
        "ghcr.io/ddahan/feature-starter/poetry:latest": {
            "version": "1.6.1"
        },
        "ghcr.io/ddahan/feature-starter/custom_bashrc:latest": {}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.black-formatter@prerelease",
                "charliermarsh.ruff",
                "tamasfe.even-better-toml"
            ],
            "settings": {
                //*********************************************************************
                // general
                //*********************************************************************
                "files.insertFinalNewline": true,
                "files.exclude": {
                    "**/__pycache__": true,
                    "**/.ruff_cache": true
                },
                //*********************************************************************
                // editor
                //*********************************************************************
                "editor.wordWrap": "wordWrapColumn",
                "editor.wordWrapColumn": 90,
                "editor.defaultFormatter": null, // overrided per language
                "editor.tabSize": 4,
                "editor.indentSize": "tabSize",
                "editor.formatOnSave": true,
                //*********************************************************************
                // color customizations
                //*********************************************************************
                "workbench.colorCustomizations": {
                    "titleBar.activeBackground": "#9b543d",
                    "titleBar.activeForeground": "#ffd242"
                },
                //*********************************************************************
                // python
                //*********************************************************************
                "python.languageServer": "Pylance", // used for import suggestions only
                "python.analysis.ignore": [
                    "*"
                ], // disable linting as it would be redundant with Ruff 
                "python.pythonPath": "/usr/local/bin/python",
                "python.envFile": "${workspaceFolder}/.env",
                "python.analysis.autoImportCompletions": true,
                "python.analysis.importFormat": "absolute",
                "python.analysis.indexing": true,
                "python.analysis.packageIndexDepths": [
                    {
                        "name": "django",
                        "depth": 10,
                        "includeAllSymbols": true
                    }
                ],
                "python.analysis.extraPaths": [
                    // TODO: find a "DRYer" way
                    "${workspaceFolder}/dj_apps",
                    "${workspaceFolder}/dj_apps/badges",
                    "${workspaceFolder}/dj_apps/core",
                    "${workspaceFolder}/dj_apps/mailing",
                    "${workspaceFolder}/dj_apps/profiles",
                    "${workspaceFolder}/dj_apps/token_auth"
                ],
                "python.testing.unittestArgs": [
                    "-v",
                    "-s",
                    "./",
                    "-p",
                    "test*.py"
                ],
                "python.testing.pytestEnabled": false,
                "python.testing.unittestEnabled": true,
                //*********************************************************************
                // black
                //*********************************************************************
                "black-formatter.args": [
                    "--config",
                    "pyproject.toml"
                ],
                "[python]": {
                    "editor.defaultFormatter": "ms-python.black-formatter",
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": true
                    }
                }
            }
        }
    }
}
